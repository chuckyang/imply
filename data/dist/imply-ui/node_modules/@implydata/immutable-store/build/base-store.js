"use strict";Object.defineProperty(exports,"__esModule",{value:true});var tslib_1=require("tslib");var NAME_KEY_FN=function(thing){return thing.name};var ImmutableStore=function(){function ImmutableStore(options){if(options===void 0){options={}}this.keyFn=options.keyFn||NAME_KEY_FN;this.readOnly=options.readOnly;this.maxEntries=options.maxEntries;if(this.maxEntries&&this.maxEntries<0){new Error("maxEntries must be positive")}}ImmutableStore.prototype.ensureWritable=function(){if(this.readOnly)throw new Error("read only store")};ImmutableStore.prototype.applyDiff=function(diff){return tslib_1.__awaiter(this,void 0,void 0,function(){var before,after,keyFn,beforeKey,existingThing,afterKey;return tslib_1.__generator(this,function(_a){switch(_a.label){case 0:this.ensureWritable();before=diff.before,after=diff.after;if(!before&&!after)throw new Error("invalid diff, no before or after");keyFn=this.keyFn;if(!before)return[3,2];beforeKey=keyFn(before);return[4,this.get(beforeKey)];case 1:existingThing=_a.sent();if(!existingThing||!existingThing.equals(before))return[2,Promise.resolve(false)];_a.label=2;case 2:if(after){afterKey=keyFn(after);if(before&&beforeKey!==afterKey)throw new Error("invalid diff, before and after key mismatch");return[2,this.addOrUpdate(after).then(function(){return true})]}else{return[2,this.deleteByKey(beforeKey).then(function(){return true})]}return[2]}})})};ImmutableStore.prototype.applyDiffAndLog=function(diff,thingName,log,err){return tslib_1.__awaiter(this,void 0,void 0,function(){var diffSuccess,action,existingThing;return tslib_1.__generator(this,function(_a){switch(_a.label){case 0:return[4,this.applyDiff(diff)];case 1:diffSuccess=_a.sent();if(!diffSuccess)return[3,2];action=diff.getAction();log(action+" "+thingName+": "+JSON.stringify(diff.after||diff.before));return[3,5];case 2:if(!diff.before)return[3,4];return[4,this.get(diff.before.name)];case 3:existingThing=_a.sent();err("Diff not accepted:");if(existingThing){err("Existing state: "+JSON.stringify(existingThing));err("Diff before   : "+JSON.stringify(diff.before))}else{err("Before state does not exist ("+diff.before.name+")")}_a.label=4;case 4:throw new Error("can not apply "+thingName+" diff "+diff.getName());case 5:return[2]}})})};return ImmutableStore}();exports.ImmutableStore=ImmutableStore;