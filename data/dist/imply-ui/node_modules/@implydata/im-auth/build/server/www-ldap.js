"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var es7Shim = require("es7-shim");
es7Shim.shim();
var immutable_store_1 = require("@implydata/immutable-store");
var nike_hercules_1 = require("@implydata/nike-hercules");
var app_1 = require("./app");
var authorizer_1 = require("./authorizer");
var server = new nike_hercules_1.HerculesServer(nike_hercules_1.HerculesServerConfig.fromJS({}), {
    projectName: 'Auth LDAP',
    projectVersion: '0.1.1',
    defaultPort: 9094
});
var userStore = new immutable_store_1.ArrayStore({
    initArray: []
});
var roleStore = new immutable_store_1.ArrayStore({
    initArray: []
});
var authorizer = new authorizer_1.LDAPAuthorizer({
    roleAuthority: 'ldap',
    userStore: userStore,
    roleStore: roleStore,
    ldapOptions: {
        url: 'ldap://192.168.99.100:389',
        searchBase: "dc=imply,dc=io",
        searchFilter: "(uid={{username}})",
        bindDN: 'cn=admin,dc=imply,dc=io',
        bindCredentials: 'JonSn0w'
    },
    logger: nike_hercules_1.LOGGER
});
server.getApp().use(function (req, res, next) {
    req.authorizer = authorizer;
    req.logger = nike_hercules_1.LOGGER;
    req.tracker = nike_hercules_1.TRACKER;
    next();
});
var authApp = app_1.makeAuthApp({
    version: '1',
    title: 'Login to Standalone Auth (LDAP)',
    appName: 'Standalone Auth (LDAP)',
    showTerms: true,
    authorizer: authorizer
});
server.getApp().use(authApp);
server.getApp().use('/', function (req, res, next) {
    var user = req.user;
    res.send("Welcome " + user.getDisplayName());
});
server.startServer();
