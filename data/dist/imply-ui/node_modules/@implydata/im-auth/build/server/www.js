"use strict";
var _this = this;
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var es7Shim = require("es7-shim");
es7Shim.shim();
var path = require("path");
var nike_hercules_1 = require("@implydata/nike-hercules");
var models_1 = require("../common/models");
var app_1 = require("./app");
var immutable_store_1 = require("@implydata/immutable-store");
var store_authorizer_1 = require("./authorizer/store-authorizer/store-authorizer");
var server = new nike_hercules_1.HerculesServer(new nike_hercules_1.HerculesServerConfig({}), {
    projectName: 'Auth',
    projectVersion: '0.1.1',
    defaultPort: 9094
});
var userStore = new immutable_store_1.FileStore({
    immutableClass: models_1.User,
    filepath: path.resolve('users.json'),
    initArray: []
});
var roleStore = new immutable_store_1.ArrayStore({
    initArray: []
});
var authorizer = new store_authorizer_1.StoreAuthorizer({
    authStore: new immutable_store_1.FileStore({
        immutableClass: models_1.UserAuth,
        filepath: path.resolve('user-auths.json'),
        initArray: []
    }),
    getRoleStore: function (user) { return roleStore; },
    userStore: userStore
});
var authApp = app_1.makeAuthApp({
    version: '1',
    title: 'Login to Standalone Auth',
    appName: 'Standalone Auth',
    showTerms: true,
    authorizer: authorizer,
    subdomainGetter: function (user) { return tslib_1.__awaiter(_this, void 0, void 0, function () {
        return tslib_1.__generator(this, function (_a) {
            if (user.accountId === '123')
                return [2, Promise.resolve('bigdatacompany')];
            if (user.accountId === '456')
                return [2, Promise.resolve('shipCo')];
            throw new Error('unknown');
        });
    }); },
    mainDomain: 'implycloudtest.com'
});
server.getApp().use(function (req, res, next) {
    req.authorizer = authorizer;
    req.logger = nike_hercules_1.LOGGER;
    req.tracker = nike_hercules_1.TRACKER;
    next();
});
server.getApp().use(authApp);
server.getApp().use('/', function (req, res, next) {
    var user = req.user;
    res.send("Welcome " + user.getDisplayName());
});
server.startServer();
