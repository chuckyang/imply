"use strict";Object.defineProperty(exports,"__esModule",{value:true});var tslib_1=require("tslib");var React=require("react");var ReactDOM=require("react-dom");var Tooltip=function(t){tslib_1.__extends(e,t);function e(){var e=t.call(this)||this;e.onHover=function(t){var o=e.props,i=o.delay,r=o.disabled;if(r)return;if(!isNaN(e._timeout))return;e._timeout=window.setTimeout(function(){return e.showTooltip()},i);e._target.addEventListener("mouseleave",e.onLeave);e._target.removeEventListener("mouseover",e.onHover)};e.onLeave=function(t){if(!isNaN(e._timeout)){window.clearTimeout(e._timeout);e._timeout=NaN}else{e.hideTooltip()}e._target.addEventListener("mouseover",e.onHover);e._target.removeEventListener("mouseleave",e.onLeave)};e.state={};return e}e.prototype.componentDidMount=function(){this._target.addEventListener("mouseover",this.onHover)};e.prototype.componentWillReceiveProps=function(t){if(t.disabled===true&&this._tooltip){this.hideTooltip()}};e.prototype.showTooltip=function(){var t=this;this._timeout=NaN;var e=document.createElement("div");e.className="tooltip-container";this._tooltip=document.body.appendChild(e);if(!this._tooltip)return;this._component=ReactDOM.render(this.renderTooltip(),this._tooltip);window.setTimeout(function(){if(!t._tooltip)return;t._component=ReactDOM.render(t.renderTooltip(false),t._tooltip)},0)};e.prototype.hideTooltip=function(){if(!this._tooltip)return;ReactDOM.unmountComponentAtNode(this._tooltip);document.body.removeChild(this._tooltip);this._tooltip=undefined};e.prototype.renderTooltip=function(t){if(t===void 0){t=true}var e=this.props,o=e.label,i=e.animated;if(!this._target)return null;var r=this._target.getBoundingClientRect(),n=r.left,a=r.top,s=r.width,l=r.height;var u={left:n+s*.5,top:i&&t?a:a+l,opacity:t?0:1};return React.createElement("div",{style:u,className:"tooltip"},React.createElement("div",{className:"label"},o))};e.prototype.componentWillUnmount=function(){this._target.removeEventListener("mouseover",this.onHover);this._target.removeEventListener("mouseleave",this.onLeave);this.hideTooltip()};e.prototype.render=function(){var t=this;var e=this.props.children;return React.cloneElement(React.Children.only(e),{ref:function(e){return t._target=ReactDOM.findDOMNode(e)}})};e.defaultProps={delay:0};return e}(React.Component);exports.Tooltip=Tooltip;