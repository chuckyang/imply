"use strict";Object.defineProperty(exports,"__esModule",{value:true});var tslib_1=require("tslib");require("./task-log-modal.css");var React=require("react");var classNames=require("classnames");var caladan_1=require("@implydata/caladan");var ajax_1=require("@implydata/ajax");var strings_1=require("../../../common/utils/constants/strings");var TaskLogModal=function(_super){tslib_1.__extends(TaskLogModal,_super);function TaskLogModal(){var _this=_super.call(this)||this;_this.queryIfTop=function(e){var fullLogLoaded=_this.state.fullLogLoaded;if(fullLogLoaded)return;if(_this.logElement&&_this.logElement.scrollTop<=0){_this.makeQuery(_this.props)}};_this.state={countQuery:0};return _this}TaskLogModal.prototype.makeQuery=function(props){var _this=this;var connectionName=props.connectionName,task=props.task;var _a=this.state,countQuery=_a.countQuery,loading=_a.loading;var taskId=task.taskId;var queryNumber=countQuery+1;this.setState({countQuery:queryNumber,loading:queryNumber},function(){return tslib_1.__awaiter(_this,void 0,void 0,function(){var logResp,e_1;return tslib_1.__generator(this,function(_a){switch(_a.label){case 0:if(loading!=null)return[2];_a.label=1;case 1:_a.trys.push([1,3,,4]);return[4,ajax_1.Ajax.query({url:"$mount/task/log",method:"POST",data:{connectionName:connectionName,taskId:taskId,offset:this.state.countQuery}})];case 2:logResp=_a.sent();return[3,4];case 3:e_1=_a.sent();if(!this.mounted)return[2];this.setState({loading:null,error:e_1.message});return[2];case 4:if(!this.mounted)return[2];this.setState({loading:null,log:logResp.log,fullLogLoaded:logResp.fullLog});return[2]}})})})};TaskLogModal.prototype.componentDidMount=function(){this.mounted=true;this.makeQuery(this.props);window.addEventListener("wheel",this.queryIfTop,false)};TaskLogModal.prototype.componentWillUnmount=function(){this.mounted=false;window.removeEventListener("wheel",this.queryIfTop)};TaskLogModal.prototype.render=function(){var _this=this;var _a=this.props,onClose=_a.onClose,task=_a.task;var _b=this.state,log=_b.log,loading=_b.loading,error=_b.error,countQuery=_b.countQuery;var taskId=task.taskId;var isLoading=loading!=null;var content=null;if(error){content=React.createElement("div",{className:"error-block"},error)}else if(loading===1){content=React.createElement(caladan_1.Loader,null)}else if(log){content=[React.createElement("div",{className:"inner"},isLoading?React.createElement(caladan_1.LoadingBar,null):null,React.createElement("pre",{className:classNames("log",{loading:isLoading}),ref:function(e){if(!e)return;_this.logElement=e;if(countQuery===1){e.scrollTop=e.scrollHeight}}},log))]}return React.createElement(caladan_1.Modal,{className:classNames("task-log-modal"),title:"Log for "+taskId+" ("+task.statusCode+")",onClose:onClose},React.createElement(caladan_1.GlobalEventListener,{scroll:this.queryIfTop}),content,React.createElement("div",{className:"button-bar"},React.createElement(caladan_1.Button,{type:"secondary",onClick:onClose,title:strings_1.STRINGS.close})))};return TaskLogModal}(React.Component);exports.TaskLogModal=TaskLogModal;