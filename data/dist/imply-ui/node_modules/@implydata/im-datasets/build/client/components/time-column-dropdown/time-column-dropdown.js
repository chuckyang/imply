"use strict";Object.defineProperty(exports,"__esModule",{value:true});var tslib_1=require("tslib");var strings_1=require("../../../common/utils/constants/strings");require("./time-column-dropdown.css");var React=require("react");var caladan_1=require("@implydata/caladan");var column_definition_1=require("../../../common/models/column-definition/column-definition");var TimeColumnDropdown=function(_super){tslib_1.__extends(TimeColumnDropdown,_super);function TimeColumnDropdown(){var _this=_super.call(this)||this;_this.renderItem=function(def){var _a=_this.props,noTimeLabel=_a.noTimeLabel,specialTimeCandidates=_a.specialTimeCandidates,sampledData=_a.sampledData;if(!def||def.isNoTime()){return{label:strings_1.STRINGS.noPrimaryTimeColumn,description:noTimeLabel||strings_1.STRINGS.thisDataDoesNotHaveAPrimaryTimeColumn}}var nameInData=def.nameInData;var description=specialTimeCandidates.map(function(c){return c.nameInData}).includes(nameInData)?String(sampledData[0][nameInData]):null;return{label:nameInData,description:description}};return _this}TimeColumnDropdown.prototype.render=function(){var _this=this;var _a=this.props,possibleValues=_a.possibleValues,selectedValue=_a.selectedValue,onChange=_a.onChange,specialTimeCandidates=_a.specialTimeCandidates;var items=specialTimeCandidates.map(function(c){return possibleValues.find(function(v){return v.nameInData===c.nameInData})}).concat(possibleValues.filter(function(v){return!specialTimeCandidates.find(function(c){return c.nameInData===v.nameInData})})).filter(function(c){return!c.isNoTime()}).concat(column_definition_1.ColumnDefinition.NO_TIME_COLUMN).filter(Boolean);var ColumnPickerDropdown=caladan_1.Dropdown.specialize();return React.createElement(ColumnPickerDropdown,{className:"time-column-dropdown",items:items,equal:function(a,b){return a.equals(b)},keyItem:function(d){return d.name},selectedItem:selectedValue,onSelect:onChange,renderItem:function(d){return _this.renderItem(d)}})};return TimeColumnDropdown}(React.Component);exports.TimeColumnDropdown=TimeColumnDropdown;