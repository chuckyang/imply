"use strict";Object.defineProperty(exports,"__esModule",{value:true});var tslib_1=require("tslib");var immutable_class_1=require("immutable-class");var fallback_json_spec_1=require("../fallback-json-spec/fallback-json-spec");var beltful_1=require("@implydata/beltful");var column_definition_1=require("../column-definition/column-definition");var column_definitions_1=require("../column-definitions/column-definitions");var general_1=require("../../utils/general/general");var generateAvailableName=beltful_1.StringUtils.generateAvailableName;var DEFAULT_MAX_COLUMNS=100;var DEFAULT_NUM_ROWS=100;var DEFAULT_INDEX_TYPE="index";var DEFAULT_PARSER_TYPE="string";var OUTPUT_HEADER_FLAG="hasHeaderRow";var DEFAULT_CONSTANT_TIME="2010-01-01T00:00:00Z";var DEFAULT_GRANULARITY_TYPE="uniform";var DEFAULT_REPORT_PARSE_EXCEPTIONS=false;var DEFAULT_FORCE_EXTENDABLE_SHARD_SPEC=true;var DataLoaderSpec=function(_super){tslib_1.__extends(DataLoaderSpec,_super);function DataLoaderSpec(){return _super!==null&&_super.apply(this,arguments)||this}DataLoaderSpec.isDataLoaderSpec=function(candidate){return candidate instanceof DataLoaderSpec};DataLoaderSpec.fromJS=function(parameters){return new DataLoaderSpec(immutable_class_1.BaseImmutable.jsToValue(DataLoaderSpec.PROPERTIES,parameters))};DataLoaderSpec.fromDefaults=function(name,dataSources,inflatedExample){var dataSource=generateAvailableName({prefix:"dataset-",isAvailable:function(name){return!dataSources.includes(name)}});switch(name){case"s3-local":case"local-file":if(inflatedExample){return new DataLoaderSpec({dataSource:inflatedExample.name,columnDefinitions:column_definitions_1.ColumnDefinitions.fromAllColumns([]),format:inflatedExample.format,formatOption:inflatedExample.formatOption,s3Prefix:inflatedExample.s3Url.replace("s3://","")})}return new DataLoaderSpec({dataSource:dataSource,s3Prefix:"",columnDefinitions:column_definitions_1.ColumnDefinitions.fromAllColumns([])});case"batch-http":if(inflatedExample){return new DataLoaderSpec({dataSource:inflatedExample.name,columnDefinitions:column_definitions_1.ColumnDefinitions.fromAllColumns([]),format:inflatedExample.format,formatOption:inflatedExample.formatOption,uris:inflatedExample.uris})}return new DataLoaderSpec({dataSource:dataSource,uris:[],columnDefinitions:column_definitions_1.ColumnDefinitions.fromAllColumns([])});default:throw new Error("unrecognized type: "+name)}};DataLoaderSpec.fromGeneratedSpec=function(value){var spec=value.spec;if(!spec)spec=value;var ioConfig=spec.ioConfig;if(!ioConfig){throw new Error("Could not find io config in spec")}var s3Prefixes=[];var uris=[];if(ioConfig.firehose){if(ioConfig.firehose.prefixes&&ioConfig.firehose.prefixes.length){s3Prefixes=ioConfig.firehose.prefixes}else if(ioConfig.firehose.uris&&ioConfig.firehose.uris.length){uris=ioConfig.firehose.uris}}var dataSchema=spec.dataSchema;if(!dataSchema){throw new Error("Could not find dataSchema in spec")}var parser=dataSchema.parser,metricsSpec=dataSchema.metricsSpec,granularitySpec=dataSchema.granularitySpec,dataSource=dataSchema.dataSource;if(!dataSource)throw new Error("Could not find dataSource property in spec");if(!parser)throw new Error("Could not find parser in dataSchema");var parseSpec=parser.parseSpec;if(!parseSpec)throw new Error("Could not find parseSpec in parser");if(parseSpec.flattenSpec)throw new Error("Cannot support flatten spec right now");var format=parseSpec.format,timestampSpec=parseSpec.timestampSpec,dimensionsSpec=parseSpec.dimensionsSpec;if(!format)throw new Error("Could not find format in parseSpec in parseSpec");if(!timestampSpec)throw new Error("Could not find timestampSpec in parseSpec");var columnDefinitions=[column_definition_1.ColumnDefinition.fromGeneratedTimestampSpec(timestampSpec)];if(dimensionsSpec&&dimensionsSpec.dimensions&&dimensionsSpec.dimensions.length){columnDefinitions=columnDefinitions.concat(dimensionsSpec.dimensions.map(column_definition_1.ColumnDefinition.fromDimensionSpec))}var columns=column_definitions_1.ColumnDefinitions.fromAllColumns(columnDefinitions);var returnValue={s3Prefix:s3Prefixes&&s3Prefixes[0]?s3Prefixes[0].replace("s3://",""):"",uris:uris,dataSource:dataSource,format:format,formatOption:parseSpec[OUTPUT_HEADER_FLAG]?"headered":null};if(parseSpec.columns){returnValue.sampledColumns=parseSpec.columns}if(metricsSpec){columns=columns.addOrUpdateColumns(metricsSpec.map(column_definition_1.ColumnDefinition.fromMetricSpec))}if(!granularitySpec){throw new Error("Could not find granularitySpec in parser")}var segmentGranularity=granularitySpec.segmentGranularity,rollup=granularitySpec.rollup,queryGranularity=granularitySpec.queryGranularity;if(rollup!==false)returnValue.rollup="on";returnValue.segmentGranularity=segmentGranularity;if(queryGranularity){if(!queryGranularity.type||queryGranularity.type!=="none"){var time=columns.getSpecialTime();var nonTime=columns.columns.filter(function(c){return!c.isSpecialTime()});columns=new column_definitions_1.ColumnDefinitions({specialTime:time.changeGranularity(queryGranularity),columns:nonTime})}}returnValue.columnDefinitions=columns;return new DataLoaderSpec(returnValue)};DataLoaderSpec.prototype.getIsHeadered=function(){return this.supportsHeaders()};DataLoaderSpec.prototype.getMaxRowsInMemory=function(){var advanced=this.advanced;return advanced&&advanced.maxRowsInMemory?advanced.maxRowsInMemory:75e3};DataLoaderSpec.prototype.changeMaxRowsInMemory=function(value){var advanced=this.advanced;var newAdvanced=Object.assign({},advanced,{maxRowsInMemory:value});return this.changeAdvanced(newAdvanced)};DataLoaderSpec.prototype.changeIsHeadered=function(newValue){if(newValue){return this.changeFormatOption("headered")}else{return this.changeFormatOption(null)}};DataLoaderSpec.prototype.changeRawIngestionSpec=function(newValue){return DataLoaderSpec.fromGeneratedSpec(newValue)};DataLoaderSpec.prototype.changeRollup=function(newRollup){var value=this.valueOf();value.rollup=newRollup;if(value.rollup==="on"&&newRollup==="off"){value.columnDefinitions=value.columnDefinitions.removeRollup()}return new DataLoaderSpec(value)};DataLoaderSpec.prototype.getSegmentGranularity=function(){var segmentGranularity=this.segmentGranularity;if(segmentGranularity)return this.segmentGranularity;if(this.uris&&this.uris.length===1&&this.uris[0]==="https://static.imply.io/data/Consumer_Complaints.csv.gz"){return"YEAR"}return"DAY"};DataLoaderSpec.prototype.changeS3Prefix=function(newPrefix){var prefix="s3://";if(newPrefix.startsWith(prefix))newPrefix=newPrefix.substring(prefix.length);var value=this.valueOf();value.s3Prefix=newPrefix;return new DataLoaderSpec(value)};DataLoaderSpec.prototype.getQualifiedS3Prefix=function(){return"s3://"+this.s3Prefix};DataLoaderSpec.prototype.getNewColumnDefinition=function(rollupType){return new column_definition_1.ColumnDefinition({name:"",nameInData:"",type:"string",rollupType:rollupType,aggregation:rollupType==="metric"?column_definition_1.Aggregation.fromType("doubleSum"):null})};DataLoaderSpec.prototype.getFormatForDisplay=function(){var isNested=this.isNested;var format=this.getFormat();if(format==="json"&&isNested)return"JSON (nested)";if(this.supportsHeaders())return format.toUpperCase()+" (first row is header)";return format.toUpperCase()};DataLoaderSpec.prototype.getQueryGranularity=function(){var specialTime=this.getSpecialTimeColumn();if(!specialTime)return null;return specialTime.getGranularity()||"none"};DataLoaderSpec.prototype.supportsHeaders=function(){return this.getFormatOption()==="headered"};DataLoaderSpec.prototype.changeSpecialTime=function(newColumn){return this.changeColumnDefinitions(this.getColumnDefinitions().changeSpecialTime(newColumn,this.isDSV()))};DataLoaderSpec.prototype.changeAllColumns=function(newColumns){return this.changeColumnDefinitions(this.getColumnDefinitions().changeAllColumns(newColumns,this.isDSV()))};DataLoaderSpec.prototype.toggleIsNested=function(){var isNested=this.isNested;return this.changeIsNested(!isNested)};DataLoaderSpec.prototype.getSpecialTimeColumn=function(){return this.getColumnDefinitions().getSpecialTime()};DataLoaderSpec.prototype.isDSV=function(){var format=this.format;return format==="csv"||format==="tsv"};DataLoaderSpec.prototype.isSupervised=function(){return false};DataLoaderSpec.prototype.toSamplePayload=function(){var parseSpec={format:this.getFormat(),dimensionsSpec:{dimensions:[]}};if(this.isDSV()){if(!this.supportsHeaders()){parseSpec.columns=DataLoaderSpec.DUMMY_COLUMNS}else{parseSpec[OUTPUT_HEADER_FLAG]=true}}if(this.s3Prefix){return{type:"s3",parseSpec:parseSpec,uris:[this.getQualifiedS3Prefix()],numRows:DEFAULT_NUM_ROWS}}else if(this.uris){return{type:"http",parseSpec:parseSpec,uris:this.uris,numRows:DEFAULT_NUM_ROWS}}else{throw new Error("Must have either s3Prefix or uris for sample")}};DataLoaderSpec.prototype.toFallbackJSONSpec=function(supportsPrefixes,connectionName){var dataSource=this.dataSource;var ingestionSpec=this.toIngestionSpec(supportsPrefixes);var spec=ingestionSpec.spec;var type=spec.ioConfig?spec.ioConfig.type:"index";return fallback_json_spec_1.FallbackJSONSpec.fromJS({rest:tslib_1.__assign({},ingestionSpec,{type:type}),type:type,dataSource:dataSource,connectionName:connectionName})};DataLoaderSpec.prototype.getDimensions=function(){var isDsv=this.isDSV();var dimensionColumns=this.getColumnDefinitions().getColumns().filter(function(c){return c.getRollupType()==="dimension"});var specialTimeColumn=this.getSpecialTimeColumn();if(isDsv){return dimensionColumns.map(function(c){return c.nameInData===specialTimeColumn.nameInData?c.toDimensionSpec():c.toDimensionSpecRename()})}else{return dimensionColumns.map(function(c){return c.toDimensionSpec()})}};DataLoaderSpec.prototype.getMetrics=function(){var originalColumns=this.getOriginalColumns();if(this.getRollup()==="on"){return this.getColumnDefinitions().getColumns().filter(function(c){return c.getRollupType()==="metric"}).map(function(c){return c.toMetricSpec(originalColumns)})}return[]};DataLoaderSpec.prototype.getOriginalColumns=function(){var _this=this;if(!this.sampledColumns||!this.isDSV()||this.supportsHeaders())return null;return this.sampledColumns.map(function(c){var definition=_this.getColumnDefinitions().toArray().find(function(cd){return cd.nameInData===c});if(!definition)return null;return definition.isSpecialTime()?definition.nameInData:definition.name}).filter(Boolean)};DataLoaderSpec.prototype.getColumnsFromSample=function(sampleDataResp){var payload=this.toSamplePayload();if(sampleDataResp.data[0]&&sampleDataResp.data[0].fields){return sampleDataResp.data[0].fields}else{var data=sampleDataResp.data.filter(Boolean);var allColumns=[].concat.apply([],data.map(function(d){return d.parsed?Object.keys(d.parsed):null}).filter(Boolean));var dedupedColumns=general_1.dedupe(allColumns);if(payload.parseSpec.columns){return payload.parseSpec.columns.slice(0,dedupedColumns.length)}else{return general_1.dedupe(allColumns)}}};DataLoaderSpec.prototype.toIngestionSpec=function(supportsPrefixes){var _a=this,dataSource=_a.dataSource,advanced=_a.advanced;var specialTimeColumn=this.getSpecialTimeColumn();var timestampSpec;if(!specialTimeColumn||specialTimeColumn.isNoTime()){timestampSpec={missingValue:DEFAULT_CONSTANT_TIME}}else{timestampSpec={column:specialTimeColumn.getNameInData()};if(specialTimeColumn.timestampFormat){timestampSpec.format=specialTimeColumn.timestampFormat}}var parseSpec={format:this.getFormat(),timestampSpec:timestampSpec,dimensionsSpec:{dimensions:this.getDimensions()}};if(this.isDSV()){if(!this.supportsHeaders()){parseSpec.columns=this.getOriginalColumns()}else{parseSpec[OUTPUT_HEADER_FLAG]=true}}var parser={type:DEFAULT_PARSER_TYPE,parseSpec:parseSpec};var rollup=this.getRollup()==="on";var queryGranularity=rollup?this.getQueryGranularity():"none";var granularitySpec={type:DEFAULT_GRANULARITY_TYPE,segmentGranularity:this.getSegmentGranularity(),rollup:rollup};if(queryGranularity){granularitySpec.queryGranularity=queryGranularity}var dataSchema={dataSource:dataSource,parser:parser,granularitySpec:granularitySpec};if(rollup){dataSchema.metricsSpec=this.getMetrics()}else{dataSchema.metricsSpec=[]}var ioConfig={type:"index",firehose:{fetchTimeout:9e5}};if(this.s3Prefix){var myPrefix=this.getQualifiedS3Prefix();ioConfig.firehose.type="static-s3";if(supportsPrefixes){ioConfig.firehose.prefixes=[myPrefix]}else{ioConfig.firehose.uris=[myPrefix]}}else if(this.uris){ioConfig.firehose.type="http";ioConfig.firehose.uris=this.uris}else{throw new Error("Must have either s3Prefix or uris for spec")}var tuningConfig={type:DEFAULT_INDEX_TYPE,reportParseExceptions:DEFAULT_REPORT_PARSE_EXCEPTIONS,forceExtendableShardSpecs:DEFAULT_FORCE_EXTENDABLE_SHARD_SPEC};if(advanced){if(advanced.maxRowsInMemory){tuningConfig.maxRowsInMemory=advanced.maxRowsInMemory}}return{type:DEFAULT_INDEX_TYPE,spec:{dataSchema:dataSchema,ioConfig:ioConfig,tuningConfig:tuningConfig}}};DataLoaderSpec.FORMAT_VALUES=["json","csv","tsv"];DataLoaderSpec.FORMAT_OPTION_VALUES=["headered","nested"];DataLoaderSpec.SEGMENT_GRANULARITY_VALUES=["HOUR","DAY","WEEK","MONTH","YEAR"];DataLoaderSpec.DUMMY_COLUMNS=Array(DEFAULT_MAX_COLUMNS).fill(null).map(function(v,i){return"column"+i});DataLoaderSpec.SUPPORTED_INGESTION_TYPES=["s3-local","local-file","batch-http"];DataLoaderSpec.PROPERTIES=[{name:"dataSource",defaultValue:null},{name:"s3Prefix",defaultValue:null},{name:"uris",defaultValue:[]},{name:"format",defaultValue:"json",possibleValues:DataLoaderSpec.FORMAT_VALUES},{name:"formatOption",defaultValue:null,possibleValues:DataLoaderSpec.FORMAT_OPTION_VALUES},{name:"rollup",defaultValue:"off"},{name:"columnDefinitions",immutableClass:column_definitions_1.ColumnDefinitions,defaultValue:column_definitions_1.ColumnDefinitions.fromAllColumns([])},{name:"sampledColumns",defaultValue:[]},{name:"segmentGranularity",defaultValue:"DAY"},{name:"advanced",defaultValue:{}}];return DataLoaderSpec}(immutable_class_1.BaseImmutable);exports.DataLoaderSpec=DataLoaderSpec;immutable_class_1.BaseImmutable.finalize(DataLoaderSpec);