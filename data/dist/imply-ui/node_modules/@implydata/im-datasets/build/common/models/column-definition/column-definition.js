"use strict";Object.defineProperty(exports,"__esModule",{value:true});var tslib_1=require("tslib");var time_1=require("../../utils/time/time");var immutable_class_1=require("immutable-class");var Aggregation=function(_super){tslib_1.__extends(Aggregation,_super);function Aggregation(){return _super!==null&&_super.apply(this,arguments)||this}Aggregation.fromJS=function(parameters){return new Aggregation(immutable_class_1.BaseImmutable.jsToValue(Aggregation.PROPERTIES,parameters))};Aggregation.fromType=function(type){return new Aggregation({type:type})};Aggregation.aggregationTypeToColumnType=function(aggregationType){if(["longSum","longMin","longMax","longFirst","longLast"].includes(aggregationType)){return"long"}else if(["doubleSum","doubleMin","doubleMax","doubleFirst","doubleLast"].includes(aggregationType)){return"float"}return null};Aggregation.prototype.has=function(property){var type=this.type;switch(property){case"namesInData":return type==="javascript"||type==="cardinality";case"fnAggregate":return type==="javascript";case"fnCombine":return type==="javascript";case"fnReset":return type==="javascript";case"filter":return type==="filtered";case"aggregator":return type==="filtered";case"byRow":return type==="cardinality";case"resolution":return type==="approxHistogram";case"numBuckets":return type==="approxHistogram";case"lowerLimit":return type==="approxHistogram";case"upperLimit":return type==="approxHistogram";case"isInputThetaSketch":return type==="thetaSketch";case"size":return type==="thetaSketch"}return false};Aggregation.prototype.toMetricSpec=function(){var _this=this;var value=this.valueOf();return Object.keys(value).filter(function(key){return _this.has(key)}).reduce(function(returnObj,currentKey){returnObj[currentKey]=value[currentKey];return returnObj},{type:value.type})};Aggregation.TYPE_VALUES=["count","doubleSum","longSum","doubleMin","longMin","doubleMax","longMax","cardinality","hyperUnique","thetaSketch","doubleFirst","longFirst","doubleLast","longLast","filtered","javascript"];Aggregation.PROPERTIES=[{name:"type"},{name:"fnAggregate",defaultValue:null},{name:"fnCombine",defaultValue:null},{name:"fnReset",defaultValue:null},{name:"filter",defaultValue:null},{name:"aggregator",immutableClass:Aggregation,defaultValue:null},{name:"byRow",defaultValue:null},{name:"resolution",defaultValue:null},{name:"numBuckets",defaultValue:null},{name:"lowerLimit",defaultValue:null},{name:"upperLimit",defaultValue:null},{name:"size",defaultValue:null}];return Aggregation}(immutable_class_1.BaseImmutable);exports.Aggregation=Aggregation;immutable_class_1.BaseImmutable.finalize(Aggregation);var ColumnDefinition=function(_super){tslib_1.__extends(ColumnDefinition,_super);function ColumnDefinition(){return _super!==null&&_super.apply(this,arguments)||this}ColumnDefinition.isColumnDefinition=function(candidate){return candidate instanceof ColumnDefinition};ColumnDefinition.fromJS=function(parameters){if(parameters.type)parameters.type=parameters.type.toLowerCase();if(parameters.timestampFormat==="auto")parameters.timestampFormat="iso";return new ColumnDefinition(immutable_class_1.BaseImmutable.jsToValue(ColumnDefinition.PROPERTIES,parameters))};ColumnDefinition.fromSampledData=function(name,values){var type;if(values.every(function(v){return!isNaN(v)&&typeof v!=="boolean"})){if(values.every(function(v){return v%1===0})){type="long"}else{type="float"}}else{type="string"}return ColumnDefinition.fromJS({name:name,nameInData:name,type:type})};ColumnDefinition.fromSegmentMetadata=function(key,value){var newValue=Object.assign({},value);if(key==="__time")newValue["specialTime"]=true;newValue["name"]=key;newValue["nameInData"]=key;var type=newValue["DATA_TYPE"];var translateType=function(){switch(type){case"VARCHAR":return"string";case"DECIMAL":return"float";case"BIGINT":return"long";default:return type.toLowerCase()}};newValue["type"]=translateType();return ColumnDefinition.fromJS(newValue)};ColumnDefinition.fromDimensionSpec=function(value){if(typeof value==="string"){return new ColumnDefinition({name:value,nameInData:value,type:"string"})}var name=value.name,type=value.type;if(!name)throw new Error("Could not find name in dimension");var returnColumn={name:name,nameInData:name};if(type)returnColumn.type=type;return new ColumnDefinition(returnColumn)};ColumnDefinition.fromMetricSpec=function(value){var name=value.name,fieldName=value.fieldName,type=value.type;if(!name)throw new Error("Could not find name in metric");var starter={name:name};if(value.fieldName){starter.nameInData=value.fieldName}else if(value.fields){starter.namesInData=value.fields}else if(value.fieldNames){starter.namesInData=value.fieldNames}return new ColumnDefinition({name:name,nameInData:fieldName,aggregation:new Aggregation(value),rollupType:"metric"})};ColumnDefinition.fromGeneratedTimestampSpec=function(value){var column=value.column,format=value.format;if(!column){if(value.missingValue)return ColumnDefinition.NO_TIME_COLUMN;throw new Error("Could not find column in timestamp spec")}if(format==="auto"||new RegExp(time_1.ISO_MATCHER).test(format))format="iso";return new ColumnDefinition({name:column,nameInData:column,timestampFormat:format,specialTime:true})};ColumnDefinition.prototype.getAggregationType=function(){return this.getAggregation().type};ColumnDefinition.prototype.changeRollupType=function(newType){var value=this.valueOf();if(newType==="metric"&&this.getRollupType()!=="metric"){value.aggregation=Aggregation.fromType(this.type==="long"?"longSum":"doubleSum")}value.rollupType=newType;return new ColumnDefinition(value)};ColumnDefinition.prototype.removeRollup=function(){var aggregation=this.aggregation;if(aggregation&&aggregation.type){var type=Aggregation.aggregationTypeToColumnType(aggregation.type);if(!type){return null}return this.changeRollupType(null).changeType(type).changeAggregation(null)}return this.changeRollupType(null)};ColumnDefinition.prototype.isMetric=function(){var rollupType=this.rollupType;return rollupType==="metric"};ColumnDefinition.prototype.isCount=function(){return this.aggregation&&this.aggregation.type==="count"};ColumnDefinition.prototype.isNumeric=function(){var type=this.type;return type==="float"||type==="long"};ColumnDefinition.prototype.isSpecialTime=function(){var specialTime=this.specialTime;return specialTime};ColumnDefinition.prototype.isNoTime=function(){return this.isSpecialTime()&&this.name===ColumnDefinition.NO_TIME};ColumnDefinition.prototype.toNonTimeColumn=function(){var nameInData=this.nameInData;return this.changeName(nameInData).changeTimestampFormat(null).changeSpecialTime(undefined)};ColumnDefinition.prototype.toSpecialTimeColumn=function(){if(this.isNoTime())return this;return this.changeName(ColumnDefinition.SPECIAL_TIME).changeSpecialTime(true)};ColumnDefinition.prototype.getNameInData=function(){var _a=this,nameInData=_a.nameInData,name=_a.name;return nameInData||name};ColumnDefinition.prototype.getNameForDisplay=function(){var _a=this,nameInData=_a.nameInData,name=_a.name,namesInData=_a.namesInData;if(nameInData!==name&&name&&nameInData)return name+" ("+nameInData+")";if(namesInData)return name+" ("+namesInData+")";if(!nameInData&&name==="count"){return"count"}return nameInData};ColumnDefinition.prototype.toDimensionSpecRename=function(){var _a=this,name=_a.name,type=_a.type;if(type&&type!=="string"){return{name:name,type:type.toLowerCase()}}return name};ColumnDefinition.prototype.toDimensionSpec=function(){var _a=this,nameInData=_a.nameInData,type=_a.type;if(type&&type!=="string"){return{name:nameInData,type:type.toLowerCase()}}return nameInData};ColumnDefinition.prototype.toMetricSpec=function(originalColumns){var _a=this,name=_a.name,nameInData=_a.nameInData,namesInData=_a.namesInData;var value={name:name};var aggregationType=this.getAggregationType();function columnLookerUpper(nameInData){if(!originalColumns)return nameInData;var ret=originalColumns[parseInt(nameInData.replace("column",""),10)];if(typeof ret!=="string"){var value_1=originalColumns.find(function(v){return v===nameInData});if(typeof value_1==="string")return value_1;throw new Error("Could not find original column for "+nameInData)}return ret}var rest=this.getAggregation().toMetricSpec();if(this.isCount()){return tslib_1.__assign({},value,rest)}if(aggregationType==="javascript"){value.fieldNames=namesInData?namesInData.map(columnLookerUpper):[]}else if(aggregationType==="cardinality"){value.fields=namesInData?namesInData.map(columnLookerUpper):[]}else{value.fieldName=columnLookerUpper(nameInData)}return tslib_1.__assign({},value,rest)};ColumnDefinition.SPECIAL_TIME="__time";ColumnDefinition.NO_TIME="no_time";ColumnDefinition.COLUMN_TYPE_VALUES=["float","long","string"];ColumnDefinition.TIMESTAMP_FORMAT_VALUES=["millis","posix","MM/dd/YYYY hh:mm:ss a","MM/dd/YYYY","M/d/YY","d/M/yyyy","YYYY-MM-dd HH:mm:ss","YYYY-MM-dd HH:mm:ss.S","iso"];ColumnDefinition.ROLLUP_TYPE_VALUES=["dimension","metric"];ColumnDefinition.PROPERTIES=[{name:"name",defaultValue:null},{name:"nameInData",defaultValue:null},{name:"namesInData",defaultValue:null},{name:"type",defaultValue:null},{name:"timestampFormat",defaultValue:"iso",possibleValues:ColumnDefinition.TIMESTAMP_FORMAT_VALUES},{name:"specialTime",defaultValue:false},{name:"hasMultipleValues",defaultValue:false},{name:"rollupType",defaultValue:"dimension"},{name:"aggregation",immutableClass:Aggregation,defaultValue:Aggregation.fromType("doubleSum")},{name:"granularity",defaultValue:"hour"}];return ColumnDefinition}(immutable_class_1.BaseImmutable);exports.ColumnDefinition=ColumnDefinition;immutable_class_1.BaseImmutable.finalize(ColumnDefinition);ColumnDefinition.NO_TIME_COLUMN=new ColumnDefinition({name:ColumnDefinition.NO_TIME,specialTime:true});ColumnDefinition.COUNT=new ColumnDefinition({aggregation:new Aggregation({type:"count"}),name:"count",rollupType:"metric"});