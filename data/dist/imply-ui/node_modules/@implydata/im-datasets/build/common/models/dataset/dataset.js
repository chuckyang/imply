"use strict";Object.defineProperty(exports,"__esModule",{value:true});var tslib_1=require("tslib");var numeral=require("numeral");var moment=require("moment-timezone");var immutable_class_1=require("immutable-class");var task_1=require("../task/task");var column_definition_1=require("../column-definition/column-definition");var fallback_json_spec_1=require("../fallback-json-spec/fallback-json-spec");var column_definitions_1=require("../column-definitions/column-definitions");var supervisor_1=require("../supervisor/supervisor");function getFirstSortedTask(tasks){return tasks.sort(function(t1,t2){if(!t1.createdTime&&t2.createdTime)return 1;if(t1.createdTime&&!t2.createdTime)return-1;if(t1.createdTime&&t2.createdTime){var diff=t2.createdTime.getTime()-t1.createdTime.getTime();if(diff!==0)return diff}return t2.taskId.localeCompare(t1.taskId)})[0]}var Dataset=function(_super){tslib_1.__extends(Dataset,_super);function Dataset(){return _super!==null&&_super.apply(this,arguments)||this}Dataset.fromJS=function(parameters){return new Dataset(immutable_class_1.BaseImmutable.jsToValue(Dataset.PROPERTIES,parameters))};Dataset.fromTasks=function(parameters,connectionTitle,isCursed){if(!parameters||!parameters.length){throw new Error("No tasks to create data set from.")}var _a=parameters[0],dataSource=_a.dataSource,connectionName=_a.connectionName;return new Dataset({name:dataSource,connectionTitle:connectionTitle,connectionName:connectionName,tasks:parameters,ephemeralType:"task",isCursed:isCursed})};Dataset.fromSupervisor=function(supervisor){var id=supervisor.id,connectionName=supervisor.connectionName,connectionTitle=supervisor.connectionTitle;return new Dataset({name:id,connectionTitle:connectionTitle,connectionName:connectionName,supervisor:supervisor,ephemeralType:"supervisor"})};Dataset.getPollLastEventPriority=function(lastEventTime){if(lastEventTime==null)return"highest";var now=moment.now();if(Math.abs(moment(lastEventTime).diff(now))<864e5){return"high"}if(Math.abs(moment(lastEventTime).diff(now,"month"))>=1){return"lowest"}return"low"};Dataset.mergeDataSources=function(oldSources,newSources){if(!oldSources)return newSources;return newSources.map(function(newSource){var oldSource=immutable_class_1.NamedArray.findByName(oldSources,newSource.name);if(!oldSource)return newSource;Dataset.SOMETIMES_POPULATED_FIELDS.forEach(function(field){var oldValue=oldSource.get(field);var newValue=newSource.get(field);if(newValue==null&&oldValue!=null){newSource=newSource.change(field,oldValue)}});return newSource})};Dataset.resolveTasksWithDataSources=function(connectionName,connectionTitle,tasks,dataSources,cursed){if(cursed===void 0){cursed=[]}if(!tasks||!tasks.length)return dataSources;var dataSourceExists=function(connectionName,dataSourceName){return dataSources.filter(Boolean).find(function(dataSource){return dataSource.connectionName===connectionName&&dataSource.name===dataSourceName})};var groupedCreateDataSourceTasks=tasks.filter(Boolean).reduce(function(mapDataSourceToTasks,t){t.connectionName=connectionName;var existingDataSource=dataSourceExists(t.connectionName,t.dataSource);if(!existingDataSource){mapDataSourceToTasks[t.dataSource]=(mapDataSourceToTasks[t.dataSource]||[]).concat(t)}else{dataSources=immutable_class_1.NamedArray.overrideByName(dataSources,existingDataSource.addTask(t))}return mapDataSourceToTasks},{});var createDataSources=Object.keys(groupedCreateDataSourceTasks);try{var taskDataSources=createDataSources.map(function(dataSource){return Dataset.fromTasks(groupedCreateDataSourceTasks[dataSource],connectionTitle,!!cursed.find(function(d){return d.name===dataSource}))});return dataSources.concat(taskDataSources).filter(Boolean)}catch(e){return dataSources}};Dataset.prototype.isEphemeral=function(){return!!this.ephemeralType};Dataset.prototype.addTask=function(task){return this.changeTasks(this.getTasks().concat(task))};Dataset.prototype.getUnderlyingTask=function(){var tasks=this.tasks;if(!tasks||!this.isEphemeral)return null;return getFirstSortedTask(tasks)};Dataset.prototype.getFormattedSize=function(){var _a=this,size=_a.size,ephemeralType=_a.ephemeralType;if(ephemeralType)return"0 B";if(size==null)return"-";return numeral(size).format("0.00 b")};Dataset.prototype.getAverageSegmentSize=function(){var _a=this,size=_a.size,segmentCount=_a.segmentCount;if(size==null)return"-";if(!size)return"0.00b";if(!segmentCount)return"?";return numeral(size/segmentCount).format("0.00 b")};Dataset.prototype.getLatestTask=function(){var tasks=this.tasks;if(!tasks)return null;return getFirstSortedTask(tasks)};Dataset.prototype.getTask=function(taskId){var tasks=this.tasks;if(!tasks)return null;return immutable_class_1.SimpleArray.find(tasks,function(t){return t.taskId===taskId})};Dataset.prototype.getIngestionType=function(){var supervisor=this.supervisor;if(supervisor&&supervisor.type)return supervisor.type;var latestTask=this.getLatestTask();if(!latestTask)return null;return latestTask.getIngestionType()};Dataset.prototype.getCountRunningTasks=function(){return this.getRunningTasks().length};Dataset.prototype.getRunningTasks=function(){var tasks=this.tasks;if(!tasks)return[];return tasks.filter(function(t){return t.statusCode==="RUNNING"})};Dataset.prototype.getCountFailedTasks=function(){var tasks=this.tasks;if(!tasks)return 0;return tasks.filter(function(t){return t.statusCode==="FAILED"}).length};Dataset.prototype.getCountSuccessfulTasks=function(){var tasks=this.tasks;if(!tasks)return 0;return tasks.filter(function(t){return t.statusCode==="SUCCESS"}).length};Dataset.prototype.getStatusInfo=function(){var supervisor=this.supervisor;var task=this.getLatestTask();if(supervisor&&this.ephemeralType==="supervisor"){var isStopped=supervisor.isStopped();if(isStopped){return"Supervised: stopped"}if(!task){return"Supervised: no tasks"}}if(task){var statusCode=task.statusCode;if(statusCode==="RUNNING"){return"Task running"}if(statusCode==="FAILED"){if(this.ephemeralType==="task"){return"Could not create dataset: task failed"}}}return"-"};Dataset.prototype.isEphemeralPending=function(){var latestTask=this.getLatestTask();return this.isEphemeral()&&latestTask&&latestTask.statusCode==="PENDING"};Dataset.prototype.isEphemeralRunning=function(){var latestTask=this.getLatestTask();return this.isEphemeral()&&latestTask&&latestTask.statusCode==="RUNNING"};Dataset.prototype.isEphemeralFailed=function(){var latestTask=this.getLatestTask();return this.isEphemeral()&&latestTask&&latestTask.statusCode==="FAILED"};Dataset.prototype.toDataLoaderSpec=function(){var task=this.getLatestTask();if(task)return task.toDataLoaderSpec();return null};Dataset.prototype.getLastEventFromNow=function(){var lastEventTime=this.lastEventTime;return lastEventTime&&!isNaN(lastEventTime.valueOf())?moment(lastEventTime).fromNow():"-"};Dataset.prototype.toFallbackSpec=function(){var name=this.name;var spec=fallback_json_spec_1.FallbackJSONSpec.fromDataSourceName(name);var columns=column_definitions_1.ColumnDefinitions.fromAllColumns(this.getColumns());return spec.initDimensions(columns.getColumns().map(function(c){return c.toDimensionSpecRename()}))};Dataset.SOMETIMES_POPULATED_FIELDS=["size","intervalCount","segmentCount","lastEventTime"];Dataset.PROPERTIES=[{name:"name"},{name:"connectionName"},{name:"connectionTitle",defaultValue:null},{name:"lastEventTime",defaultValue:null,type:immutable_class_1.PropertyType.DATE},{name:"size",defaultValue:null},{name:"columns",immutableClassArray:column_definition_1.ColumnDefinition,defaultValue:[]},{name:"segmentCount",defaultValue:null},{name:"intervalCount",defaultValue:null},{name:"loadStatus",defaultValue:null},{name:"tasks",immutableClassArray:task_1.Task,defaultValue:[]},{name:"supervisor",immutableClass:supervisor_1.Supervisor,defaultValue:null},{name:"ephemeralType",defaultValue:null},{name:"isCursed",defaultValue:false}];return Dataset}(immutable_class_1.BaseImmutable);exports.Dataset=Dataset;immutable_class_1.BaseImmutable.finalize(Dataset);