"use strict";Object.defineProperty(exports,"__esModule",{value:true});var tslib_1=require("tslib");var fallback_json_spec_1=require("../fallback-json-spec/fallback-json-spec");var task_1=require("../task/task");var imply_ui_common_1=require("@implydata/imply-ui-common");var immutable_class_1=require("immutable-class");var data_loader_spec_1=require("../data-loader-spec/data-loader-spec");var dataset_1=require("../dataset/dataset");function isCreatingDataset(sources,spec){var specDataSource=spec.getDataSource();if(!sources||!sources.length)return true;if(specDataSource&&!sources.find(function(d){return d.name===specDataSource}))return true;return false}exports.isCreatingDataset=isCreatingDataset;var DataLoaderHelper=function(_super){tslib_1.__extends(DataLoaderHelper,_super);function DataLoaderHelper(){return _super!==null&&_super.apply(this,arguments)||this}DataLoaderHelper.fromJS=function(params){return new DataLoaderHelper(immutable_class_1.BaseImmutable.jsToValue(DataLoaderHelper.PROPERTIES,params))};DataLoaderHelper.prototype.shouldShowWizard=function(){var connections=this.connections;var someSupportsSampling=connections.some(function(c){return c.getCapabilities().supportsSampling()});if(!someSupportsSampling)return false;var connectionSupportsDataLoader=function(connectionName){var connection=connections.find(function(c){return c.name===connectionName});return connection&&connection.getCapabilities().supportsSampling()};var _a=this,type=_a.type,ingestionType=_a.ingestionType;if(type==="rerun"){var value=this.value;if(!connectionSupportsDataLoader(value.connectionName))return false;if(!value.toDataLoaderSpec())return false;if(value instanceof fallback_json_spec_1.FallbackJSONSpec)return false;if(!data_loader_spec_1.DataLoaderSpec.SUPPORTED_INGESTION_TYPES.includes(this.computeIngestionType()))return false}else if(type==="supervisor"){return false}else if(type==="ingestion-type"){if(!ingestionType)return false;return data_loader_spec_1.DataLoaderSpec.SUPPORTED_INGESTION_TYPES.includes(ingestionType)}return true};DataLoaderHelper.prototype.clearThings=function(){var connections=this.connections;return new DataLoaderHelper({connections:connections})};DataLoaderHelper.prototype.setIngestionType=function(ingestionType,exampleName){if(exampleName===void 0){exampleName=""}return this.changeType("ingestion-type").changeIngestionType(ingestionType).changeExampleName(exampleName)};DataLoaderHelper.prototype.fallbackToJSON=function(rerunInfo){return this.changeType("rerun").changeValue(rerunInfo)};DataLoaderHelper.prototype.setRerunInfo=function(rerunInfo){return this.changeType("rerun").changeValue(rerunInfo)};DataLoaderHelper.prototype.setSupervisorEditInfo=function(dataSource){return this.changeType("supervisor").changeValue(dataSource)};DataLoaderHelper.prototype.getInitialConnectionName=function(){var connections=this.connections;var value=this.value;if(value&&value.connectionName){return value.connectionName}return connections&&connections[0]?connections[0].name:null};DataLoaderHelper.prototype.computeIngestionType=function(){var _a=this,type=_a.type,value=_a.value,ingestionType=_a.ingestionType;switch(type){case"supervisor":case"rerun":return value?value.getIngestionType():null;case"ingestion-type":return ingestionType;default:return"s3-local"}};DataLoaderHelper.prototype.getDataLoaderSpec=function(exampleDataSets,existingDataSources){var _a=this,type=_a.type,value=_a.value,ingestionType=_a.ingestionType,exampleName=_a.exampleName;if(type==="ingestion-type"){if(!ingestionType)return null;var inflatedExample=immutable_class_1.NamedArray.findByName(exampleDataSets,exampleName);return data_loader_spec_1.DataLoaderSpec.fromDefaults(ingestionType,existingDataSources.map(function(d){return d.name}),inflatedExample)}else if(type==="rerun"&&value instanceof task_1.Task){return data_loader_spec_1.DataLoaderSpec.fromGeneratedSpec(value.rawPayload)}return value?value.toDataLoaderSpec():null};DataLoaderHelper.prototype.getJSONSpec=function(exampleDataSets,existingDataSources){var _a=this,value=_a.value,type=_a.type,ingestionType=_a.ingestionType,exampleName=_a.exampleName;if(type==="rerun"&&value instanceof dataset_1.Dataset){return value?value.toFallbackSpec():null}else if(type==="rerun"&&value instanceof fallback_json_spec_1.FallbackJSONSpec){return value}else if(type==="rerun"&&value instanceof task_1.Task){return fallback_json_spec_1.FallbackJSONSpec.fromJS({dataSource:value.dataSource,type:value.getIngestionType(),rest:value.rawPayload?{spec:value.rawPayload.spec,type:value.getIngestionType()}:{}})}else if(type==="supervisor"&&value instanceof dataset_1.Dataset){var supervisor=value.supervisor;if(!supervisor){throw new Error("Could not get supervisor spec")}var lastSpec=supervisor.spec;if(!lastSpec){throw new Error("No spec to go off of")}return fallback_json_spec_1.FallbackJSONSpec.fromGeneratedSupervisorSpec(lastSpec)}else if(type==="ingestion-type"){var inflatedExample=immutable_class_1.NamedArray.findByName(exampleDataSets,exampleName);return fallback_json_spec_1.FallbackJSONSpec.fromDataSourceNameAndTypeAndWikiSample(ingestionType,inflatedExample,existingDataSources.map(function(d){return d.name}))}throw new Error("Could not get JSON spec")};DataLoaderHelper.prototype.isSupervisorEdit=function(){return this.type==="supervisor"};DataLoaderHelper.prototype.knowIngestionType=function(){if(this.type==="ingestion-type")return!!this.ingestionType;return!!this.value};DataLoaderHelper.prototype.getSupportedWizardConnections=function(){var _a=this,ingestionType=_a.ingestionType,connections=_a.connections;if(!connections)return[];return connections.filter(function(connection){var supported=connection.canOnboardData()&&connection.getCapabilities().supportsSampling();return ingestionType==="batch-http"?supported&&connection.getCapabilities().supportsHTTPIngestion():supported})};DataLoaderHelper.prototype.setConnectionsForWizard=function(){return this.changeConnections(this.getSupportedWizardConnections())};DataLoaderHelper.prototype.setConnectionsForJSONLoader=function(){var connections=this.connections;var supportedConnections=connections?connections.filter(function(connection){return connection.canOnboardData()}):[];return this.changeConnections(supportedConnections)};DataLoaderHelper.PROPERTIES=[{name:"connections",defaultValue:[],immutableClassArray:imply_ui_common_1.Connection},{name:"type",defaultValue:null},{name:"value",defaultValue:null},{name:"ingestionType",defaultValue:null},{name:"exampleName",defaultValue:null}];return DataLoaderHelper}(immutable_class_1.BaseImmutable);exports.DataLoaderHelper=DataLoaderHelper;immutable_class_1.BaseImmutable.finalize(DataLoaderHelper);