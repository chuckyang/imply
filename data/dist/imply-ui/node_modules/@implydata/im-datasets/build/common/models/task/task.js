"use strict";Object.defineProperty(exports,"__esModule",{value:true});var tslib_1=require("tslib");var immutable_class_1=require("immutable-class");var data_loader_spec_1=require("../data-loader-spec/data-loader-spec");var general_1=require("../../utils/general/general");var Task=function(_super){tslib_1.__extends(Task,_super);function Task(){return _super!==null&&_super.apply(this,arguments)||this}Task.fromJS=function(params){return new Task(immutable_class_1.BaseImmutable.jsToValue(Task.PROPERTIES,params))};Task.fromClusterAndStatusAndPayloadAndSupervisorIds=function(connectionName,taskStatus,payload,supervisedTaskMapping){var location=taskStatus.location,id=taskStatus.id,statusCode=taskStatus.statusCode,createdTime=taskStatus.createdTime,duration=taskStatus.duration;var dataSource=payload.dataSource;var supervisedTasks=Object.keys(supervisedTaskMapping);var supervisorId=null;if(supervisedTasks.includes(id))supervisorId=supervisedTaskMapping[id];var getStatusCode=function(){if(location&&location.host){return"RUNNING"}else{return"PENDING"}};var js={dataSource:dataSource,taskId:id,statusCode:statusCode||getStatusCode(),createdTime:createdTime,duration:duration,location:location.host+location.port,connectionName:connectionName,supervisorId:supervisorId,rawPayload:payload};if(payload.ioConfig&&payload.ioConfig.type){js.type=general_1.ingestionTypeFromIoConfig(payload.ioConfig)}return Task.fromJS(js)};Task.prototype.getLocation=function(){var location=this.location;if(location===-1)return"unknown";return location};Task.prototype.getIngestionType=function(){var _a=this,type=_a.type,rawPayload=_a.rawPayload;if(type)return type;if(rawPayload&&rawPayload.spec&&rawPayload.spec.ioConfig){return general_1.ingestionTypeFromIoConfig(rawPayload.spec.ioConfig)}return null};Task.prototype.toDataLoaderSpec=function(){var rawPayload=this.rawPayload;try{return data_loader_spec_1.DataLoaderSpec.fromGeneratedSpec(rawPayload)}catch(e){return null}};Task.PROPERTIES=[{name:"taskId"},{name:"connectionName"},{name:"statusCode"},{name:"supervisorId",defaultValue:null},{name:"type",defaultValue:null},{name:"dataSource",defaultValue:null},{name:"queueInsertionTime",defaultValue:null},{name:"location",defaultValue:null},{name:"duration",defaultValue:null},{name:"createdTime",defaultValue:null,type:immutable_class_1.PropertyType.DATE},{name:"rawPayload",defaultValue:null}];return Task}(immutable_class_1.BaseImmutable);exports.Task=Task;immutable_class_1.BaseImmutable.finalize(Task);