"use strict";Object.defineProperty(exports,"__esModule",{value:true});var tslib_1=require("tslib");var immutable_class_1=require("immutable-class");var continuous_stub_1=require("./specs/continuous-stub");var wiki_index_1=require("./specs/wiki-index");var beltful_1=require("@implydata/beltful");var batch_stubs_1=require("./specs/batch-stubs");var equalByStringify=function(a,b){return JSON.stringify(a)===JSON.stringify(b)};var FallbackJSONSpec=function(_super){tslib_1.__extends(FallbackJSONSpec,_super);function FallbackJSONSpec(){return _super!==null&&_super.apply(this,arguments)||this}FallbackJSONSpec.fallbackJSONSpec=function(candidate){return candidate instanceof FallbackJSONSpec};FallbackJSONSpec.fromJS=function(parameters){return new FallbackJSONSpec(immutable_class_1.BaseImmutable.jsToValue(FallbackJSONSpec.PROPERTIES,parameters))};FallbackJSONSpec.isSupervised=function(generatedSpec){var spec=generatedSpec.spec;if(!spec&&generatedSpec.ioConfig){var type=generatedSpec.type||generatedSpec.ioConfig.type;return type==="kafka"||type==="kinesis"}return false};FallbackJSONSpec.fromGeneratedSupervisorSpec=function(spec){delete spec.id;delete spec.resource;delete spec.ioConfig.baseSequenceName;if(spec.ioConfig.startPartitions){if(spec.ioConfig.startPartitions.topic){spec.ioConfig.topic=spec.ioConfig.startPartitions.topic}if(spec.ioConfig.startPartitions.stream){spec.ioConfig.stream=spec.ioConfig.startPartitions.stream}}delete spec.ioConfig.startPartitions;delete spec.ioConfig.endPartitions;var type=spec.type||spec.ioConfig.type;var tuningConfig=spec.tuningConfig;if(tuningConfig&&tuningConfig.type&&spec.tuningConfig.type==="KafkaTuningConfig"){spec.tuningConfig.type="kafka"}var dataSource;var dimensions;var metrics;if(spec.dataSchema){dataSource=spec.dataSchema.dataSource;if(spec.dataSchema.parser){dimensions=spec.dataSchema.parser.dimensions}metrics=spec.dataSchema.metricsSpec}return FallbackJSONSpec.fromJS({rest:spec,type:type,dataSource:dataSource,dimensions:dimensions,metrics:metrics})};FallbackJSONSpec.fromDataSourceName=function(name){return new FallbackJSONSpec({rest:batch_stubs_1.OTHER_BATCH_STUB(name),type:"other-batch",dataSource:name})};FallbackJSONSpec.fromDataSourceNameAndTypeAndWikiSample=function(type,inflatedExample,dataSources){var fromStub=function(specStub){return new FallbackJSONSpec({rest:specStub,type:type,dataSource:dataSourceName})};var dataSourceName=beltful_1.StringUtils.generateAvailableName({isAvailable:function(name){return!dataSources.includes(name)},prefix:"dataset-"});switch(type){case"kinesis":return fromStub(continuous_stub_1.CONTINUOUS_STUB("kinesis",dataSourceName));case"kafka":return fromStub(continuous_stub_1.CONTINUOUS_STUB("kafka",dataSourceName));case"local-file":case"s3-local":if(inflatedExample){return new FallbackJSONSpec({rest:wiki_index_1.EXAMPLE_STATIC_S3(inflatedExample.name,inflatedExample.s3Url),type:type,dataSource:inflatedExample.name})}return fromStub(batch_stubs_1.S3_LOCAL_STUB(dataSourceName));case"batch-http":if(inflatedExample){return new FallbackJSONSpec({rest:batch_stubs_1.HTTP_BATCH_STUB(inflatedExample.name,inflatedExample.uris),type:type,dataSource:inflatedExample.name})}return fromStub(batch_stubs_1.HTTP_BATCH_STUB(dataSourceName,["http://example.com/uri1"]));case"other-batch":return fromStub(batch_stubs_1.OTHER_BATCH_STUB(dataSourceName));case"other-continuous":return fromStub(continuous_stub_1.CONTINUOUS_STUB("?",dataSourceName));default:throw new Error("unrecognized type: "+type)}};FallbackJSONSpec.prototype.toBatchJSONSpec=function(supportsPrefixes){var rest=this.rest;rest.type=this.getDruidIngestionType();return rest};FallbackJSONSpec.prototype.getIngestionType=function(){return this.type};FallbackJSONSpec.prototype.getDruidIngestionType=function(){var type=this.type;if(type==="s3-local"||type==="other-batch"||type==="batch-http"){return"index"}return type||"index"};FallbackJSONSpec.prototype.getSpec=function(){if(!this.isSupervised()){return tslib_1.__assign({},this.rest,{type:this.getDruidIngestionType()})}else{return this.rest}};FallbackJSONSpec.prototype.safeAccessValueDataschema=function(){var value=this.valueOf();if(!value.rest){value.rest={}}if(!this.isSupervised()){if(!value.rest.spec){value.rest.spec={}}if(!value.rest.spec.dataSchema){value.rest.spec.dataSchema={}}}else{if(!value.rest.dataSchema){value.rest.dataSchema={}}}return value};FallbackJSONSpec.prototype.getDataSchemaFromSpec=function(rawSpec){if(this.isSupervised()){return rawSpec.dataSchema}else{return rawSpec&&rawSpec.spec?rawSpec.spec.dataSchema:null}};FallbackJSONSpec.prototype.initDimensions=function(dims){if(this.isSupervised()){throw new Error("This should only be called on datasource with no attached tasks. use supervisor payload to init spec.")}var value=this.safeAccessValueDataschema();value.dimensions=dims;if(!value.rest.spec.dataSchema.parser){value.rest.spec.dataSchema.parser={}}if(!value.rest.spec.dataSchema.parser.parseSpec){value.rest.spec.dataSchema.parser.parseSpec={}}if(!value.rest.spec.dataSchema.parser.parseSpec.dimensionsSpec){value.rest.spec.dataSchema.parser.parseSpec.dimensionsSpec={}}value.rest.spec.dataSchema.parser.parseSpec.dimensionsSpec.dimensions=dims;return new FallbackJSONSpec(value)};FallbackJSONSpec.prototype.changeDataSource=function(ds){var value=this.safeAccessValueDataschema();value.dataSource=ds;if(!this.isSupervised()){value.rest.spec.dataSchema.dataSource=ds}else{value.rest.dataSchema.dataSource=ds}return new FallbackJSONSpec(value)};FallbackJSONSpec.prototype.changeRest=function(newSpec){var value=this.valueOf();if(!this.isSupervised()&&newSpec.type&&newSpec.type!==value.type){value.type=newSpec.type}value.rest=newSpec;var dataSchema=this.getDataSchemaFromSpec(newSpec);if(dataSchema&&dataSchema.dataSource!==this.dataSource){value.dataSource=dataSchema.dataSource}return new FallbackJSONSpec(value)};FallbackJSONSpec.prototype.toSupervisorSpec=function(){var rest=this.rest;return tslib_1.__assign({},rest)};FallbackJSONSpec.prototype.isSupervised=function(){return this.type==="kafka"||this.type==="kinesis"};FallbackJSONSpec.prototype.toDataLoaderSpec=function(){return null};FallbackJSONSpec.PROPERTIES=[{name:"rest",equal:equalByStringify},{name:"type"},{name:"dataSource",defaultValue:null},{name:"dimensions",defaultValue:[],equal:equalByStringify},{name:"metrics",defaultValue:[],equal:equalByStringify},{name:"connectionName",defaultValue:null}];return FallbackJSONSpec}(immutable_class_1.BaseImmutable);exports.FallbackJSONSpec=FallbackJSONSpec;immutable_class_1.BaseImmutable.finalize(FallbackJSONSpec);