"use strict";var _this=this;var tslib_1=require("tslib");var immutable_class_1=require("immutable-class");var express=require("express");var error_1=require("../../utils/error/error");var druid_requester_1=require("../../utils/requester/druid-requester");var router=express.Router();router.post("/load",function(req,res,next){return tslib_1.__awaiter(_this,void 0,void 0,function(){var logger,dataSources,e_1;return tslib_1.__generator(this,function(_a){switch(_a.label){case 0:logger=req.logger;_a.label=1;case 1:_a.trys.push([1,3,,4]);return[4,druid_requester_1.getDataSourcesForConnections(req)];case 2:dataSources=_a.sent();return[3,4];case 3:e_1=_a.sent();logger.warn("Could not load datasets "+e_1.message);res.sendError({status:500,error:"could not load datasets",e:e_1});return[2];case 4:res.json({dataSources:dataSources});return[2]}})})});router.post("/delete",function(req,res,next){return tslib_1.__awaiter(_this,void 0,void 0,function(){var connectionActions,logger,dbAuthToken,decorators,body,datasetName,connectionName,requester,e_2,e_3,sources,e_4,updatedDataSource,e_5;return tslib_1.__generator(this,function(_a){switch(_a.label){case 0:connectionActions=req.connectionActions,logger=req.logger,dbAuthToken=req.dbAuthToken,decorators=req.decorators;body=req.body;datasetName=body.datasetName,connectionName=body.connectionName;_a.label=1;case 1:_a.trys.push([1,3,,4]);return[4,connectionActions.getDruidRequesterForConnectionName(connectionName,dbAuthToken,decorators)];case 2:requester=_a.sent();return[3,4];case 3:e_2=_a.sent();logger.warn("Could not get requester for supervisor: "+e_2.message);next(e_2);return[2];case 4:_a.trys.push([4,6,,7]);return[4,requester.setDropAllLoadRule(datasetName,req)];case 5:_a.sent();return[3,7];case 6:e_3=_a.sent();next(new error_1.DatasetsError("Could not delete dataset: "+e_3.message));return[2];case 7:_a.trys.push([7,9,,10]);return[4,druid_requester_1.getDataSourcesForConnections(req)];case 8:sources=_a.sent();return[3,10];case 9:e_4=_a.sent();next(new error_1.DatasetsError("Could not delete dataset: "+e_4.message));return[2];case 10:updatedDataSource=immutable_class_1.NamedArray.findByName(sources,datasetName);if(!updatedDataSource)return[3,14];logger.log("Cleaning up tasks for "+updatedDataSource.name+" for cluster "+requester.connection.name);_a.label=11;case 11:_a.trys.push([11,13,,14]);return[4,requester.cleanUpTasksAndSupervisors(updatedDataSource.name,req)];case 12:_a.sent();return[3,14];case 13:e_5=_a.sent();logger.log("Could not clean up tasks for: "+updatedDataSource.name+" for cluster "+requester.connection.name+" because "+e_5.message);return[3,14];case 14:res.json({dataSources:sources});return[2]}})})});module.exports=router;