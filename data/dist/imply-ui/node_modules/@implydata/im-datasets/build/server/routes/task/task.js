"use strict";var _this=this;var tslib_1=require("tslib");var express=require("express");var druid_requester_1=require("../../utils/requester/druid-requester");var router=express.Router();router.get("/info/:connectionName/:taskId",function(req,res,next){return tslib_1.__awaiter(_this,void 0,void 0,function(){var connectionActions,logger,dbAuthToken,decorators,_a,connectionName,taskId,requester,e_1,payload,e_2,status,e_3;return tslib_1.__generator(this,function(_b){switch(_b.label){case 0:connectionActions=req.connectionActions,logger=req.logger,dbAuthToken=req.dbAuthToken,decorators=req.decorators;_a=req.params,connectionName=_a.connectionName,taskId=_a.taskId;_b.label=1;case 1:_b.trys.push([1,3,,4]);return[4,connectionActions.getDruidRequesterForConnectionName(connectionName,dbAuthToken,decorators)];case 2:requester=_b.sent();return[3,4];case 3:e_1=_b.sent();logger.warn("Could not get requester for supervisor: "+e_1.message);next(e_1);return[2];case 4:_b.trys.push([4,6,,7]);return[4,requester.getTaskPayload(taskId,req)];case 5:payload=_b.sent();return[3,7];case 6:e_2=_b.sent();logger.error("Could not get task payload for "+taskId);return[3,7];case 7:_b.trys.push([7,9,,10]);return[4,requester.getTaskStatus(taskId,req)];case 8:status=_b.sent();return[3,10];case 9:e_3=_b.sent();logger.error("Could not get task status for "+taskId);return[3,10];case 10:res.json({spec:payload,status:status});return[2]}})})});router.post("/create",function(req,res,next){return tslib_1.__awaiter(_this,void 0,void 0,function(){var connectionActions,logger,dbAuthToken,decorators,_a,connectionName,task,dataSource,requester,e_4,e_5,e_6,dataSources;return tslib_1.__generator(this,function(_b){switch(_b.label){case 0:connectionActions=req.connectionActions,logger=req.logger,dbAuthToken=req.dbAuthToken,decorators=req.decorators;_a=req.body,connectionName=_a.connectionName,task=_a.task,dataSource=_a.dataSource;_b.label=1;case 1:_b.trys.push([1,3,,4]);return[4,connectionActions.getDruidRequesterForConnectionName(connectionName,dbAuthToken,decorators)];case 2:requester=_b.sent();return[3,4];case 3:e_4=_b.sent();logger.warn("Could not get requester for supervisor: "+e_4.message);next(e_4);return[2];case 4:_b.trys.push([4,6,,7]);return[4,requester.prepareDataSourceForCreation(dataSource,req)];case 5:_b.sent();return[3,7];case 6:e_5=_b.sent();logger.error("Could not prepare dataset for creation");next(e_5);return[2];case 7:_b.trys.push([7,9,,10]);return[4,requester.createTask(task,req)];case 8:_b.sent();return[3,10];case 9:e_6=_b.sent();logger.error("Could not create task: "+e_6.message);next(e_6);return[2];case 10:return[4,druid_requester_1.getDataSourcesForConnections(req)];case 11:dataSources=_b.sent();res.json({dataSources:dataSources});return[2]}})})});router.post("/shutdown",function(req,res,next){return tslib_1.__awaiter(_this,void 0,void 0,function(){var connectionActions,logger,dbAuthToken,decorators,_a,connectionName,id,supervisorId,requester,e_7,e_8,e_9;return tslib_1.__generator(this,function(_b){switch(_b.label){case 0:connectionActions=req.connectionActions,logger=req.logger,dbAuthToken=req.dbAuthToken,decorators=req.decorators;_a=req.body,connectionName=_a.connectionName,id=_a.id,supervisorId=_a.supervisorId;_b.label=1;case 1:_b.trys.push([1,3,,4]);return[4,connectionActions.getDruidRequesterForConnectionName(connectionName,dbAuthToken,decorators)];case 2:requester=_b.sent();return[3,4];case 3:e_7=_b.sent();logger.warn("Could not get requester for supervisor: "+e_7.message);next(e_7);return[2];case 4:if(!supervisorId)return[3,9];_b.label=5;case 5:_b.trys.push([5,7,,8]);return[4,requester.shutdownSupervisor(supervisorId,req)];case 6:_b.sent();return[3,8];case 7:e_8=_b.sent();logger.error("Could not shut down supervisor");next(e_8);return[2];case 8:return[3,12];case 9:_b.trys.push([9,11,,12]);return[4,requester.shutdownTask(id,req)];case 10:_b.sent();return[3,12];case 11:e_9=_b.sent();logger.error("Could not shut down task");next(e_9);return[2];case 12:res.json({status:"OK"});return[2]}})})});router.get("/status/:connectionName/:taskId",function(req,res,next){return tslib_1.__awaiter(_this,void 0,void 0,function(){var connectionActions,logger,dbAuthToken,decorators,_a,connectionName,taskId,requester,e_10,response;return tslib_1.__generator(this,function(_b){switch(_b.label){case 0:connectionActions=req.connectionActions,logger=req.logger,dbAuthToken=req.dbAuthToken,decorators=req.decorators;_a=req.params,connectionName=_a.connectionName,taskId=_a.taskId;_b.label=1;case 1:_b.trys.push([1,3,,4]);return[4,connectionActions.getDruidRequesterForConnectionName(connectionName,dbAuthToken,decorators)];case 2:requester=_b.sent();return[3,4];case 3:e_10=_b.sent();logger.warn("Could not get requester for supervisor: "+e_10.message);next(e_10);return[2];case 4:try{response=requester.getTaskStatus(taskId,req)}catch(e){logger.error("Could not get task status response: "+e.message);next(e);return[2]}res.send(response.status);return[2]}})})});router.post("/log",function(req,res,next){return tslib_1.__awaiter(_this,void 0,void 0,function(){var connectionActions,logger,dbAuthToken,decorators,body,connectionName,taskId,offset,requester,e_11,log,bytes,e_12;return tslib_1.__generator(this,function(_a){switch(_a.label){case 0:connectionActions=req.connectionActions,logger=req.logger,dbAuthToken=req.dbAuthToken,decorators=req.decorators,body=req.body;connectionName=body.connectionName,taskId=body.taskId,offset=body.offset;if(offset==null||isNaN(offset)||offset<=0){res.sendError({status:400,error:"Invalid offset"});return[2]}if(!taskId){res.sendError({status:400,error:"Must provide task id"});return[2]}_a.label=1;case 1:_a.trys.push([1,3,,4]);return[4,connectionActions.getDruidRequesterForConnectionName(connectionName,dbAuthToken,decorators)];case 2:requester=_a.sent();return[3,4];case 3:e_11=_a.sent();logger.warn("Could not get requester for supervisor: "+e_11.message);next(e_11);return[2];case 4:bytes=offset*8192;_a.label=5;case 5:_a.trys.push([5,7,,8]);return[4,requester.getTaskLog(taskId,req,bytes)];case 6:log=_a.sent();return[3,8];case 7:e_12=_a.sent();log="Could not get task log for "+taskId;logger.error("Could not get task log for "+taskId);return[3,8];case 8:res.json({log:log,fullLog:new Buffer(log).byteLength<bytes});return[2]}})})});module.exports=router;