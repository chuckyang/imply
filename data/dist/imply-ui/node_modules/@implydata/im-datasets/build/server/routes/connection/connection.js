"use strict";Object.defineProperty(exports,"__esModule",{value:true});var tslib_1=require("tslib");var express=require("express");var NodeCache=require("node-cache");var error_1=require("../../utils/error/error");var CACHE_LIFE=600;var capabilitiesCache=new NodeCache({stdTTL:CACHE_LIFE});function connectionRouteFactory(opts){var _this=this;var router=express.Router();var generateUploadUrl=opts.generateUploadUrl;router.post("/load",function(req,res,next){return tslib_1.__awaiter(_this,void 0,void 0,function(){var _this=this;var user,connectionActions,logger,accountId,druidRequesters,e_1,connectionsWithCapabilitiesPromises,connectionsWithCapabilities,e_2;return tslib_1.__generator(this,function(_a){switch(_a.label){case 0:user=req.user,connectionActions=req.connectionActions;logger=req.logger;accountId=user.accountId;_a.label=1;case 1:_a.trys.push([1,3,,4]);return[4,connectionActions.getDruidRequestersForConnections(req)];case 2:druidRequesters=_a.sent();return[3,4];case 3:e_1=_a.sent();next(new error_1.DatasetsError("Could not load druid requesters for connections "+e_1.message));return[2];case 4:connectionsWithCapabilitiesPromises=druidRequesters.map(function(requester){return tslib_1.__awaiter(_this,void 0,void 0,function(){var connection,capabilitiesStatus,e_3,capabilities,e_4;return tslib_1.__generator(this,function(_a){switch(_a.label){case 0:connection=requester.connection;_a.label=1;case 1:_a.trys.push([1,3,,4]);return[4,requester.getStatusInfo(req)];case 2:capabilitiesStatus=_a.sent();return[3,4];case 3:e_3=_a.sent();logger.warn("Could not get status info for cluster: "+connection.name+", "+e_3.message);return[3,4];case 4:if(capabilitiesStatus){connection=connection.processStatusResponse(capabilitiesStatus)}if(!generateUploadUrl)return[3,9];_a.label=5;case 5:_a.trys.push([5,7,,8]);return[4,generateUploadUrl(connection.name,"test",user,req.requestId)];case 6:_a.sent();capabilitiesCache.set(accountId,{"local-file-upload":true});capabilities=connection.getCapabilities();return[2,connection.changeCapabilities(capabilities.addCapability("local-file-upload"))];case 7:e_4=_a.sent();logger.warn("Local file upload is probably not enabled for: "+connection.name+", account: "+accountId+" because "+e_4.message);capabilitiesCache.set(accountId,{"local-file-upload":false});return[2,connection];case 8:return[3,10];case 9:return[2,connection];case 10:return[2]}})})});_a.label=5;case 5:_a.trys.push([5,7,,8]);return[4,Promise.all(connectionsWithCapabilitiesPromises)];case 6:connectionsWithCapabilities=_a.sent();return[3,8];case 7:e_2=_a.sent();next(e_2);return[2];case 8:res.json({connections:connectionsWithCapabilities.map(function(c){return c.toClientConnection()})});return[2]}})})});return router}exports.connectionRouteFactory=connectionRouteFactory;