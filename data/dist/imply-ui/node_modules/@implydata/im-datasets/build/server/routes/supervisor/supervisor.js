"use strict";var _this=this;var tslib_1=require("tslib");var express=require("express");var supervisor_1=require("../../../common/models/supervisor/supervisor");var router=express.Router();function getSupervisorsForConnections(req){return tslib_1.__awaiter(this,void 0,void 0,function(){var _this=this;var logger,connectionActions,requesters,e_1,supervisorPromises,supervisorss,e_2;return tslib_1.__generator(this,function(_a){switch(_a.label){case 0:logger=req.logger,connectionActions=req.connectionActions;_a.label=1;case 1:_a.trys.push([1,3,,4]);return[4,connectionActions.getDruidRequestersForConnections(req)];case 2:requesters=_a.sent();return[3,4];case 3:e_1=_a.sent();logger.log("Could not load requesters for supervisors: "+e_1.message);return[3,4];case 4:supervisorPromises=requesters.map(function(requester){return tslib_1.__awaiter(_this,void 0,void 0,function(){return tslib_1.__generator(this,function(_a){switch(_a.label){case 0:return[4,requester.getSupervisorsForConnection(req)];case 1:return[2,_a.sent()]}})})});_a.label=5;case 5:_a.trys.push([5,7,,8]);return[4,Promise.all(supervisorPromises)];case 6:supervisorss=_a.sent();return[3,8];case 7:e_2=_a.sent();logger.log("Could not load supervisors: "+e_2.message);return[2,[]];case 8:return[2,[].concat.apply([],supervisorss.filter(Boolean))]}})})}router.post("/create",function(req,res,next){return tslib_1.__awaiter(_this,void 0,void 0,function(){var dbAuthToken,connectionActions,logger,decorators,_a,connectionName,task,dataSource,requester,e_3,e_4,e_5,supervisors,e_6;return tslib_1.__generator(this,function(_b){switch(_b.label){case 0:dbAuthToken=req.dbAuthToken,connectionActions=req.connectionActions,logger=req.logger,decorators=req.decorators;_a=req.body,connectionName=_a.connectionName,task=_a.task,dataSource=_a.dataSource;_b.label=1;case 1:_b.trys.push([1,3,,4]);return[4,connectionActions.getDruidRequesterForConnectionName(connectionName,dbAuthToken,decorators)];case 2:requester=_b.sent();return[3,4];case 3:e_3=_b.sent();logger.warn("Could not get requester for supervisor: "+e_3.message);next(e_3);return[2];case 4:_b.trys.push([4,6,,7]);return[4,requester.prepareDataSourceForCreation(dataSource,req,true)];case 5:_b.sent();return[3,7];case 6:e_4=_b.sent();logger.error("Could not prepare datasource for creation "+e_4.message);next(e_4);return[2];case 7:_b.trys.push([7,9,,10]);return[4,requester.postSupervisor(task,req)];case 8:_b.sent();return[3,10];case 9:e_5=_b.sent();logger.error("Could not create supervisor: "+e_5.message);next(e_5);return[2];case 10:_b.trys.push([10,12,,13]);return[4,getSupervisorsForConnections(req)];case 11:supervisors=_b.sent();return[3,13];case 12:e_6=_b.sent();res.json({supervisors:[]});return[3,13];case 13:res.json({supervisors:supervisors});return[2]}})})});router.post("/edit",function(req,res,next){return tslib_1.__awaiter(_this,void 0,void 0,function(){var logger,dbAuthToken,connectionActions,decorators,_a,connectionName,supervisor,requester,e_7,e_8,supervisors,e_9;return tslib_1.__generator(this,function(_b){switch(_b.label){case 0:logger=req.logger,dbAuthToken=req.dbAuthToken,connectionActions=req.connectionActions,decorators=req.decorators;_a=req.body,connectionName=_a.connectionName,supervisor=_a.supervisor;_b.label=1;case 1:_b.trys.push([1,3,,4]);return[4,connectionActions.getDruidRequesterForConnectionName(connectionName,dbAuthToken,decorators)];case 2:requester=_b.sent();return[3,4];case 3:e_7=_b.sent();logger.warn("Could not get requester for supervisor: "+e_7.message);next(e_7);return[2];case 4:_b.trys.push([4,6,,7]);return[4,requester.postSupervisor(supervisor,req)];case 5:_b.sent();return[3,7];case 6:e_8=_b.sent();logger.error("Could not create supervisor: "+e_8.message);next(e_8);return[2];case 7:_b.trys.push([7,9,,10]);return[4,getSupervisorsForConnections(req)];case 8:supervisors=_b.sent();return[3,10];case 9:e_9=_b.sent();res.json({supervisors:[]});return[3,10];case 10:res.json({supervisors:supervisors});return[2]}})})});router.post("/restart",function(req,res,next){return tslib_1.__awaiter(_this,void 0,void 0,function(){var connectionActions,logger,dbAuthToken,decorators,_a,connectionName,supervisor,deserializedSupervisor,requester,e_10,e_11,e_12,supervisors,e_13;return tslib_1.__generator(this,function(_b){switch(_b.label){case 0:connectionActions=req.connectionActions,logger=req.logger,dbAuthToken=req.dbAuthToken,decorators=req.decorators;_a=req.body,connectionName=_a.connectionName,supervisor=_a.supervisor;try{deserializedSupervisor=supervisor_1.Supervisor.fromJS(supervisor)}catch(e){next(e);return[2]}_b.label=1;case 1:_b.trys.push([1,3,,4]);return[4,connectionActions.getDruidRequesterForConnectionName(connectionName,dbAuthToken,decorators)];case 2:requester=_b.sent();return[3,4];case 3:e_10=_b.sent();logger.warn("Could not get requester for supervisor: "+e_10.message);next(e_10);return[2];case 4:_b.trys.push([4,6,,7]);return[4,requester.prepareDataSourceForCreation(deserializedSupervisor.getDataSource(),req,true)];case 5:_b.sent();return[3,7];case 6:e_11=_b.sent();logger.error("Could not prepare datasource for creation "+e_11.message);next(e_11);return[2];case 7:_b.trys.push([7,9,,10]);return[4,requester.postSupervisor(deserializedSupervisor.spec,req)];case 8:_b.sent();return[3,10];case 9:e_12=_b.sent();logger.error("Could not create supervisor: "+e_12.message);next(e_12);return[2];case 10:_b.trys.push([10,12,,13]);return[4,getSupervisorsForConnections(req)];case 11:supervisors=_b.sent();return[3,13];case 12:e_13=_b.sent();res.json({supervisors:[]});return[3,13];case 13:res.json({supervisors:supervisors});return[2]}})})});router.post("/shutdown",function(req,res,next){return tslib_1.__awaiter(_this,void 0,void 0,function(){var connectionActions,logger,dbAuthToken,decorators,_a,connectionName,supervisorId,requester,e_14,e_15,supervisors,e_16;return tslib_1.__generator(this,function(_b){switch(_b.label){case 0:connectionActions=req.connectionActions,logger=req.logger,dbAuthToken=req.dbAuthToken,decorators=req.decorators;_a=req.body,connectionName=_a.connectionName,supervisorId=_a.supervisorId;_b.label=1;case 1:_b.trys.push([1,3,,4]);return[4,connectionActions.getDruidRequesterForConnectionName(connectionName,dbAuthToken,decorators)];case 2:requester=_b.sent();return[3,4];case 3:e_14=_b.sent();logger.warn("Could not get requester for supervisor: "+e_14.message);next(e_14);return[2];case 4:_b.trys.push([4,6,,7]);return[4,requester.shutdownSupervisor(supervisorId,req)];case 5:_b.sent();return[3,7];case 6:e_15=_b.sent();logger.error("Could not shut down supervisor: "+e_15.message);next(e_15);return[2];case 7:_b.trys.push([7,9,,10]);return[4,getSupervisorsForConnections(req)];case 8:supervisors=_b.sent();return[3,10];case 9:e_16=_b.sent();res.json({supervisors:[]});return[3,10];case 10:res.json({supervisors:supervisors});return[2]}})})});module.exports=router;