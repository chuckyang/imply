"use strict";Object.defineProperty(exports,"__esModule",{value:true});var tslib_1=require("tslib");var druid_requester_1=require("../requester/druid-requester");var error_1=require("../error/error");var ConnectionActions=function(){function ConnectionActions(options){this.verbose=options.verbose;this.connectionStore=options.connectionStore;this.maxQueries=options.maxQueries;this.logger=options.logger}ConnectionActions.prototype.getDruidRequesterForConnectionName=function(connectionName,authToken,decorators){return tslib_1.__awaiter(this,void 0,void 0,function(){var connection,e_1;return tslib_1.__generator(this,function(_a){switch(_a.label){case 0:_a.trys.push([0,2,,3]);return[4,this.connectionStore.get(connectionName)];case 1:connection=_a.sent();return[3,3];case 2:e_1=_a.sent();throw new Error("Failed to get cluster "+connectionName+": "+e_1.message);case 3:return[2,this.getDruidRequesterForConnection(connection,authToken,decorators)]}})})};ConnectionActions.prototype.getDruidRequesterForConnection=function(connection,authToken,decorators){var _a=this,maxQueries=_a.maxQueries,logger=_a.logger;return new druid_requester_1.DruidClusterRequester({connection:connection,maxQueries:maxQueries!=null?maxQueries:ConnectionActions.DEFAULT_MAX_QUERIES,logger:logger,decorators:decorators},authToken)};ConnectionActions.prototype.getDruidRequestersForConnections=function(req,filterCondition){return tslib_1.__awaiter(this,void 0,void 0,function(){var _this=this;var logger,dbAuthToken,decorators,connections,e_2;return tslib_1.__generator(this,function(_a){switch(_a.label){case 0:logger=req.logger,dbAuthToken=req.dbAuthToken,decorators=req.decorators;_a.label=1;case 1:_a.trys.push([1,3,,4]);return[4,this.connectionStore.getAll()];case 2:connections=_a.sent();return[3,4];case 3:e_2=_a.sent();throw new error_1.DatasetsError("Failed to get clusters "+e_2.message);case 4:if(!connections){logger.log("Empty describe connections response");return[2,[]]}return[2,connections.map(function(connection){try{if(filterCondition&&filterCondition(connection))return null;var requester=_this.getDruidRequesterForConnection(connection,dbAuthToken,decorators);return requester}catch(e){throw new Error("Could not get requester: "+e.message+" from payload "+JSON.stringify(connection,null,2))}}).filter(Boolean)]}})})};ConnectionActions.DEFAULT_MAX_QUERIES=200;return ConnectionActions}();exports.ConnectionActions=ConnectionActions;